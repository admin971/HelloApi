cat main.tf 
terraform {
  required_version = ">= 1.10.3"

  backend "s3" {
    endpoints = {
      s3 = "https://nyc3.digitaloceanspaces.com" # Correct endpoint for DigitalOcean Spaces
    }
    bucket                      = "spacebackupfile"            # DigitalOcean Space name
    key                         = "terraform.tfstate"          # Updated path to the state file
    skip_credentials_validation = true                         # Skip AWS-specific validations
    skip_requesting_account_id  = true                         # Prevent AWS account checks
    skip_metadata_api_check     = true                         # Avoid AWS metadata validation
    skip_region_validation      = true                         # Bypass region validation
    skip_s3_checksum            = true                         # Disable S3 checksum validation
    force_path_style            = true                         # Enable path-style access
    region                      = "us-east-1"                 # Dummy region for AWS compatibility
  }

  required_providers {
    digitalocean = {
      source  = "digitalocean/digitalocean"
      version = "~> 2.0"
    }
  }
}

provider "digitalocean" {
  token = var.do_token
}

resource "digitalocean_droplet" "from_snapshot" {
  name   = "new-droplet-from-snapshot"
  region = var.region        # Use the variable "region"
  size   = "s-4vcpu-8gb"     # Adjust size based on your requirement
  image  = var.snapshot_id   # Use the variable "snapshot_id"
  ipv6   = true
  tags   = ["snapshot-deployment"]
}

output "droplet_ip" {
  value = digitalocean_droplet.from_snapshot.ipv4_address
}